{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\nconst INITIAL_URL = \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=8\";\nconst state = {\n  user: undefined,\n  pokemonResults: {\n    count: undefined,\n    next: INITIAL_URL,\n    previous: undefined,\n    results: []\n  }\n};\nexport class Store {\n  constructor() {\n    this.subject = new BehaviorSubject(state);\n    this.store = this.subject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  get value() {\n    return this.subject.value;\n  }\n\n  select(name) {\n    return this.store.pipe(pluck(name));\n  }\n\n  set(name, state) {\n    this.subject.next(Object.assign(Object.assign({}, this.value), {\n      [name]: state\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}