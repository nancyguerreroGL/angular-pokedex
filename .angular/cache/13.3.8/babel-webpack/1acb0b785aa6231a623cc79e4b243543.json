{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"../../../../store\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(af, store) {\n      this.af = af;\n      this.store = store;\n      this.auth$ = this.af.authState.pipe(tap(next => {\n        if (!next) {\n          this.store.set('user', null);\n          return;\n        }\n\n        const user = {\n          email: next.email,\n          uid: next.uid,\n          authenticated: true\n        };\n        this.store.set('user', user);\n      }));\n    }\n\n    createUser(email, password) {\n      return this.af.createUserWithEmailAndPassword(email, password);\n    }\n\n    loginUser(email, password) {\n      return this.af.signInWithEmailAndPassword(email, password);\n    }\n\n    logoutUser() {\n      return this.af.signOut();\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Store));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}