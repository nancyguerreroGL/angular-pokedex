{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst POKEDEX_API = 'https://pokeapi.co/api/v2/pokemon/';\nconst POKEDEX_IMAGE_BASE_URL = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\nconst POKEDEX_IMAGE_FORMAT = '.png';\n\nconst getImageZeroDigit = value => {\n  return value.length < 2 ? `${POKEDEX_IMAGE_BASE_URL}00${value}` : `${POKEDEX_IMAGE_BASE_URL}0${value}`;\n};\n\nconst getPokedex_image_base_number = value => {\n  const convertId = value.toString();\n\n  if (convertId.length < 3) {\n    return getImageZeroDigit(convertId);\n  }\n\n  return `${POKEDEX_IMAGE_BASE_URL}`;\n};\n\nexport let PokedexDashboardService = /*#__PURE__*/(() => {\n  class PokedexDashboardService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getPokemon() {\n      // get the items\n      return this.http.get(POKEDEX_API).pipe(switchMap(items => {\n        const results = items.results;\n        const itemRequests = results.map(item => this.http.get(`${POKEDEX_API}${item.name}`).pipe(map(item => {\n          console.log('item', item);\n          return Object.assign(Object.assign({}, item), {\n            imageUrl: `${getPokedex_image_base_number(item.id)}${POKEDEX_IMAGE_FORMAT}`\n          });\n        })));\n        return forkJoin(itemRequests).pipe(map(itemRequests => {\n          return itemRequests;\n        }));\n      }));\n    }\n\n  }\n\n  PokedexDashboardService.ɵfac = function PokedexDashboardService_Factory(t) {\n    return new (t || PokedexDashboardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PokedexDashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokedexDashboardService,\n    factory: PokedexDashboardService.ɵfac\n  });\n  return PokedexDashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}